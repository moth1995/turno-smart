﻿@using Microsoft.AspNetCore.Identity
@inject SignInManager<Usuarios> SignInManager
@inject UserManager<Usuarios> UserManager

@model ListMedicoVM
@{
    ViewData["Title"] = "Medicos";
}
<div class="container py-5">
    <div class="d-flex justify-content align-items-center gap-3">
        @if (@User.IsInRole("Admin"))
        {
            <a type="button" class="btn btn-light btn-lg mt-4" asp-area="" asp-controller="Medico" asp-action="Create">
                ➕ Crear Médico
            </a>
        }

    </div>
    <div class="row">
        <div class="col-lg-8">
            <h1 class="display-4 mb-4">@ViewData["Title"]</h1>
            <p class="lead mb-5">
                Seleccioná el profesional con el que querés reservar tu turno online.
            </p>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-lg-8">
            <form method="get" class="input-group">
                <input type="text"
                       class="form-control"
                       placeholder="Buscar profesional..."
                       asp-for="Filter" />
                <button type="submit" class="btn btn-outline-secondary">🔍</button>
            </form>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-8">
            @if (Model.Medicos.Any())
            {
                <div id="doctors-list" class="card border-0 shadow-sm">
                    <div class="card-body p-4">
                        @{
                            var groupedBySpecialty = Model.Medicos
                            .GroupBy(m => m.Especialidad)
                            .OrderBy(g => g.Key);
                        }

                        @foreach (var group in groupedBySpecialty)
                        {
                            <h2 class="h4 mb-4">@group.Key</h2>
                            <ul class="list-unstyled">
                                @foreach (var medico in group)
                                {
                                    <li class="mb-3 d-flex justify-content-between align-items-center">
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <p class="text-decoration-none text-dark d-flex align-items-center">
                                                <span class="me-2">•</span>
                                                @medico.Nombre
                                            </p>
                                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editMedicoModal" data-id="@medico.Id">
                                                 Editar
                                            </button>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("Create", "Turno", new { medicoId = medico.Id })"
                                               class="text-decoration-none text-dark d-flex align-items-center">
                                                <span class="me-2">•</span>
                                                @medico.Nombre
                                            </a>
                                        }
                                    </li>
                                }
                            </ul>
                            <hr class="my-4" />
                        }
                    </div>
                </div>
            }
            else
            {
                <p class="text-muted">No se encontraron profesionales</p>
            }
        </div>
   <div class="modal fade" id="editMedicoModal" tabindex="-1" aria-labelledby="editMedicoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editMedicoModalLabel">Editar Médico</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editMedicoForm">
                    <input type="hidden" id="medicoId" name="Id" />
                    <div class="mb-3">
                        <label for="nombre" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="nombre" name="Nombre" />
                    </div>
                    <div class="mb-3">
                        <label for="apellido" class="form-label">Apellido</label>
                        <input type="text" class="form-control" id="apellido" name="Apellido" />
                    </div>
                    <div class="mb-3">
                        <label for="telefono" class="form-label">Teléfono</label>
                        <input type="text" class="form-control" id="telefono" name="Telefono" />
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" class="form-control" id="email" name="Email" />
                    </div>
                    <div class="mb-3">
                        <label for="resena" class="form-label">Reseña</label>
                        <textarea class="form-control" id="resena" name="Reseña"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="imagen" class="form-label">Imagen</label>
                        <input type="text" class="form-control" id="imagen" name="Imagen" required />
                    </div>
                    <div class="mb-3">
                        <label for="especialidad" class="form-label">Especialidad</label>
                        <select class="form-control" id="especialidad" name="IdEspecialidad">
                            <!-- Opciones de especialidad se llenarán dinámicamente -->
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">Guardar cambios</button>
                </form>
            </div>
        </div>
    </div>
</div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';
            console.log(successMessage);
            console.log(errorMessage);

            toastr.options = {
                "closeButton": true,
                "debug": false,
                "newestOnTop": false,
                "progressBar": true,
                "positionClass": "toast-bottom-right",
                "preventDuplicates": false,
                "onclick": null,
                "showDuration": "300",
                "hideDuration": "1000",
                "timeOut": "5000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };

            if (successMessage) {
                toastr.success(successMessage);
            }

            if (errorMessage) {
                toastr.error(errorMessage);
            }
        });
    </script>
         <script>
                    document.addEventListener('DOMContentLoaded', function () {
        var editMedicoModal = document.getElementById('editMedicoModal');
        editMedicoModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var medicoId = button.getAttribute('data-id');

            // Llama a tu API para obtener los datos del médico
            fetch(`/Medico/Edit/${medicoId}`)
                .then(response => response.json())
                .then(data => {
                        console.log(data); // Verifica que `data.resena` tenga el valor correcto
                    document.getElementById('medicoId').value = data.id;
                    document.getElementById('nombre').value = data.nombre;
                    document.getElementById('apellido').value = data.apellido;
                    document.getElementById('telefono').value = data.telefono;
                    document.getElementById('email').value = data.email;
                    document.getElementById('resena').value = data.reseña ||'';
                    document.getElementById('imagen').value = data.imagen;

                    // Llenar las opciones de especialidad
                    var especialidadSelect = document.getElementById('especialidad');
                    especialidadSelect.innerHTML = '';
                    data.especialidad.forEach(function (especialidad) {
                        var option = document.createElement('option');
                        option.value = especialidad.value;
                        option.text = especialidad.text;
                        if (especialidad.value == data.idEspecialidad) {
                            option.selected = true;
                        }
                        especialidadSelect.appendChild(option);
                    });
                });
        });

        document.getElementById('editMedicoForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            var jsonData = {};

            formData.forEach((value, key) => {
                jsonData[key] = value;
            });

            fetch(`/Medico/Edit`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(jsonData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                     toastr.success('Información de médico actualizada correctamente.');
                setTimeout(() => {
                    location.reload();
                }, 2000); // Espera 2 segundos antes de recargar la página
            }                    
                 else {
                    alert('Error al guardar los cambios: ' + data.message);
                }
            })
            .catch(error => {
                alert('Error al guardar los cambios: ' + error);
            });
        });
    });               
            </script>
}
