@model ListTurnosVM
<h1 class="display-4 text-center mb-2">Mi Agenda</h1>
<p class="text-center text-muted mb-5">Administrá tus consultas programadas</p>
<div class="container-fluid px-0 d-flex flex-column" style={{ minHeight: 'calc(100vh - 200px)' }}>
    <div class="d-flex align-items-center justify-content-between mb-4">
        <div class="d-flex align-items-center">
            <!-- Botón para ir al día anterior -->
            <a asp-action="Index" asp-route-date="@Model.CurrentDate.AddDays(-1).ToString("yyyy-MM-dd")" class="btn btn-link text-custom">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-left ">
                    <path d="m15 18-6-6 6-6"></path>
                </svg>
            </a>

            <h2 class="h4 mb-0 mx-3" id="dateText" onclick="openDatePicker()">
                @Model.CurrentDate.ToString(@"D")
            </h2>

            <input type="date" id="datePicker" style="display:none;"
                   onchange="window.location.href='@Url.Action("Index", "Turno")?date=' + this.value"
                   value="@Model.CurrentDate.ToString("yyyy-MM-dd")" />
            
            <!-- Botón para ir al día siguiente -->
            <a asp-action="Index" asp-route-date="@Model.CurrentDate.AddDays(1).ToString("yyyy-MM-dd")" class="btn btn-link text-custom">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chevron-right">
                    <path d="m9 18 6-6-6-6"></path>
                </svg>
            </a>
        </div>
    </div>

    <div class="card border-0 shadow-sm flex-grow-1">
        <div class="card-body p-0">
            <div class="table-responsive" style={{ maxHeight: 'calc(100vh - 300px)' , overflowY: 'auto' }}>
                <table class="table table-hover mb-0">
                    <thead style={{ position: 'sticky' , top: 0, backgroundColor: 'white' , zIndex: 1 }}>
                        <tr>
                            <th class="ps-4">Hora</th>
                            <th>Paciente</th>
                            <th>Especialidad</th>
                            <th>Motivo</th>
                            <th>Estado</th>
                            <th class="text-end pe-4">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.Turnos.Any())
                        {
                            @foreach (var turno in Model.Turnos)
                            {
                                <tr>
                                    <td class="ps-4 align-middle">
                                        <span class="fw-medium">@turno.Hora.ToString(@"hh\:mm")</span>
                                    </td>
                                    <td class="align-middle">
                                        @turno.PacienteNombre
                                    </td>
                                    <td class="align-middle">
                                        @turno.MedicoEspecialidad
                                    </td>
                                    <td class="align-middle">
                                        @turno.MotivoConsulta
                                    </td>
                                    <td class="align-middle">
                                        <span class="badge @(turno.Estado == "CONFIRMADO" ? "bg-success" : "bg-warning")">
                                            @(turno.Estado == "CONFIRMADO" ? "Confirmado" : "Reservado")
                                        </span>
                                    </td>
                                    <td class="text-end pe-4 align-middle">
                                        <div class="btn-group">
                                            <button class="btn btn-primary btn-sm"
                                                    onClick="">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-file-text me-2"><path d="M15 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V7Z"></path><path d="M14 2v4a2 2 0 0 0 2 2h4"></path><path d="M10 9H8"></path><path d="M16 13H8"></path><path d="M16 17H8"></path></svg>
                                                Historia Clínica
                                            </button>
                                            <button class="btn btn-warning btn-sm"
                                                    onClick="">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar me-2"><path d="M8 2v4"></path><path d="M16 2v4"></path><rect width="18" height="18" x="3" y="4" rx="2"></rect><path d="M3 10h18"></path></svg>
                                                Reprogramar
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan=6 class="text-center py-4 text-muted">
                                    No hay consultas programadas para este día
                                </td>
                            </tr>

                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<script>
    function openDatePicker() {
        // Acceder al input de fecha
        const datePicker = document.getElementById('datePicker');

        // Hacer el input visible solo para mostrar el calendario
        datePicker.style.display = 'block';

        // Abrir el calendario automáticamente (esto depende del navegador)
        datePicker.click();

        // Cuando se haya seleccionado la fecha, ocultamos nuevamente el input
        datePicker.addEventListener('change', function () {
            // Ocultamos el input de nuevo después de seleccionar una fecha
            datePicker.style.display = 'none';
        });
    }

</script>